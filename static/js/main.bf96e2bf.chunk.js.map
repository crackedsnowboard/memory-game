{"version":3,"sources":["components/FriendCard/index.js","components/Navbar/index.js","components/Wrapper/index.js","components/Title/index.js","components/Footer/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","onClick","handleCardClick","id","Navbar","href","count","topScore","Wrapper","Title","Footer","App","state","friends","console","log","find","object","index","setState","resetGame","sort","Math","random","forEach","friend","this","cardTracker","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"wtEAaeA,MAVf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aAAaC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,gBAAgBP,EAAMQ,U,MCUnGC,MAbf,SAAgBT,GACd,OACE,yBAAKC,UAAU,mDACT,uBAAGA,UAAU,eAAeS,KAAK,KAAjC,eACF,0BAAMT,UAAU,eAAhB,4BAGA,uBAAGA,UAAU,0BAAb,UAA8CD,EAAMW,MAApD,iBAAyEX,EAAMY,Y,MCJxEC,MAJf,SAAiBb,GACf,OAAO,wCAAMC,UAAU,WAAcD,K,MCWxBc,MAZf,SAAed,GACb,OAAO,yBAAKC,UAAU,aACpB,yBAAKA,UAAU,aACX,wBAAIA,UAAU,SAAd,eACA,uBAAGA,UAAU,YAAb,+E,aCIOc,MARf,WACE,OACE,4BAAQd,UAAU,UAChB,gDCyESe,E,4MApEbC,MAAQ,CACNC,QAASA,EACTP,MAAO,EACPC,SAAU,G,EAGZL,gBAAkB,SAACC,GACjBW,QAAQC,IAAIZ,GACZ,EAAKS,MAAMC,QAAQG,MAAK,SAACC,EAAQC,GAE3BD,EAAOd,KAAOA,IAChBW,QAAQC,IAAIE,EAAOX,OAEE,IAAjBW,EAAOX,OACTW,EAAOX,MAAQ,EACf,EAAKa,SAAS,CAAEb,MAAO,EAAKM,MAAMN,MAAQ,MAG1CQ,QAAQC,IAAI,aACZ,EAAKK,iBAMX,EAAKR,MAAMC,QAAQQ,MAAK,kBAAMC,KAAKC,SAAW,O,EAGhDH,UAAY,WACN,EAAKR,MAAMN,MAAQ,EAAKM,MAAML,UAChC,EAAKY,SAAS,CAAEZ,SAAU,EAAKK,MAAMN,MAAQ,IAE/C,EAAKM,MAAMC,QAAQW,SAAQ,SAAAC,GACzBA,EAAOnB,MAAQ,KAEjB,EAAKa,SAAS,CAACb,MAAO,K,uDAId,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAEEC,SAAUmB,KAAKd,MAAML,SACrBD,MAAOoB,KAAKd,MAAMN,MAClBqB,YAAaD,KAAKd,MAAMe,cAG1B,kBAAC,EAAD,KACE,kBAAC,EAAD,MACCD,KAAKd,MAAMC,QAAQe,KAAI,SAAAH,GAAM,OAC5B,kBAAC,EAAD,CACEvB,gBAAiB,EAAKA,gBACtBC,GAAIsB,EAAOtB,GACX0B,IAAKJ,EAAOtB,GACZL,KAAM2B,EAAO3B,KACbE,MAAOyB,EAAOzB,YAKpB,kBAAC,EAAD,W,GAhEU8B,a,MCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bf96e2bf.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img className=\"click-item\" alt={props.name} src={props.image} onClick={() => props.handleCardClick(props.id)}/>\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar(props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg justify-content-between\">\n          <a className=\"navbar-brand\" href=\"#\">Memory Game</a>\n        <span className=\"navbar-text\">\n          Click an image to begin!\n        </span>\n        <a className=\"nav-item justify-right\">Score: {props.count} | Top Score: {props.topScore}</a>\n\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <div className=\"container\">\n    <div className=\"jumbotron\">\n        <h1 className=\"title\">Memory Game</h1>\n        <p className=\"subTitle\">\n        Click on an image to earn points, but don't click on any more than once!\n        </p>\n      </div>\n      </div>\n      \n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Memory Game!</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Footer from \"./components/Footer\";\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends: friends,\n    count: 0,\n    topScore: 0,\n  };\n\n  handleCardClick = (id) => {\n    console.log(id);\n    this.state.friends.find((object, index) => {\n      // console.log(object);\n      if (object.id === id) {\n        console.log(object.count);\n        // console.log(object);\n        if (object.count === 0) {\n          object.count = 1;\n          this.setState({ count: this.state.count + 1 });\n        }\n        else {\n          console.log(\"game over\");\n          this.resetGame()\n        }\n      }\n    })\n    \n    // reshuffle the deck of cards\n    this.state.friends.sort(() => Math.random() - 0.5)\n  };\n\n  resetGame = () => {\n    if (this.state.count > this.state.topScore) {\n      this.setState({ topScore: this.state.count + 1 })\n    }\n    this.state.friends.forEach(friend => {\n      friend.count = 0;\n    });\n    this.setState({count: 0})\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <div>\n        <Navbar\n\n          topScore={this.state.topScore}\n          count={this.state.count}\n          cardTracker={this.state.cardTracker}\n        />\n\n        <Wrapper>\n          <Title></Title>\n          {this.state.friends.map(friend => (\n            <FriendCard\n              handleCardClick={this.handleCardClick}\n              id={friend.id}\n              key={friend.id}\n              name={friend.name}\n              image={friend.image}\n            \n            />\n          ))}\n        </Wrapper>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}